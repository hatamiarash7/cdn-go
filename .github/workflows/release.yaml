name: Release

on:
  release:
    types: [published]

jobs:
  init:
    name: 🚩 Initialize
    runs-on: ubuntu-latest
    steps:
      - name: Cancel previous workflow
        uses: styfle/cancel-workflow-action@0.11.0
        with:
          access_token: ${{ secrets.PAT }}

  build:
    name: ✏️ Generate
    runs-on: ubuntu-20.04
    needs: init
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
          token: ${{ secrets.PAT }}
          fetch-depth: 0

      - name: Get version
        run: echo "APP_VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Cleanup
        run: rm -rf api docs test *.go go.* .gitignore

      - name: OpenAPI Generator
        uses: hatamiarash7/openapi-generator@main
        with:
          generator: go
          generator-tag: v6.6.0
          config-file: .github/generator/config.yml
          openapi-url: https://cdn-api.s3.ir-thr-at1.arvanstorage.ir/cdn-4.0.yml
          command-args: "--http-user-agent r1c-cdn-sdk"
          output-dir: "/github/workspace"
          template-dir: .github/generator/template/

      - name: Update output
        run: bash .github/generator/tune.sh

      - name: Get version
        id: version
        uses: jbutcher5/read-yaml@main
        with:
          file: "./api/openapi.yaml"
          key-path: '["info", "version"]'

      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: "1.18"

      - name: Build
        env:
          GOOS: linux
          GOARCH: amd64
          CGO_ENABLED: 0
          LDFLAGS: -s -w
        run: go build -trimpath -ldflags "$LDFLAGS" -o "./cdn" .

      - name: Test
        run: |
          go get github.com/stretchr/testify/assert
          go get golang.org/x/net/context
          go test -v -race ./... -json > TestResults.json

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: Test-results
          path: TestResults.json

      - name: Cleanup
        run: rm -rf cdn TestResults.json

      - name: Github - Commit & Push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          branch: main
          commit_message: "SDK ${{ env.APP_VERSION }} - API v${{ steps.version.outputs.data }}"
          commit_user_name: "ArvanCloud"
          commit_user_email: "cdn.sre@arvancloud.ir"
          commit_author: Arash <arash.r1c@gmail.com>

      - name: Gitlab - Commit & Push changes
        run: |
          git config user.name "Arash Hatami"
          git config user.email "arash.hatami@arvancloud.ir"
          git remote add gitlab "https://oauth2:${{ secrets.GLPAT }}@git.arvancloud.ir/arvancloud/cdn/go-sdk.git"
          git commit --allow-empty -a -m "SDK ${{ env.APP_VERSION }} - API v${{ steps.version.outputs.data }}"
          git checkout main
          git push --set-upstream gitlab main
